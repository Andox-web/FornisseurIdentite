{"remainingRequest":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\CoursCrypto.vue?vue&type=style&index=0&id=a527bee6&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\CoursCrypto.vue","mtime":1738572800420},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\css-loader\\index.js","mtime":1737957114353},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1737957108442},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\postcss-loader\\src\\index.js","mtime":1737957113589},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYXJkIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cg=="},{"version":3,"sources":["CoursCrypto.vue"],"names":[],"mappings":";AAiKA;AACA;AACA","file":"CoursCrypto.vue","sourceRoot":"src/pages/frontoffice","sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"card\">\n            <template slot=\"header\">\n              <h4 class=\"card-title\">Cryptos chart</h4>\n              <p class=\"card-category\">24 Hours performance</p>\n            </template>\n            <div class=\"card-body\">\n              <select v-model=\"selectedCrypto\" @change=\"updateChartData\" class=\"form-control\">\n                <option v-for=\"crypto in cryptoList\" :key=\"crypto.nom\" :value=\"crypto.nom\">{{ crypto.nom }}</option>\n              </select>\n              <line-chart :chart-data=\"lineChart.data\" :chart-options=\"lineChart.options\" :responsive-options=\"lineChart.responsiveOptions\" />\n            </div>\n            <template slot=\"footer\">\n              <div class=\"legend\">\n                <i class=\"fa fa-circle text-info\"></i> Selected Crypto\n              </div>\n              <hr>\n              <div class=\"stats\">\n                <i class=\"fa fa-history\"></i> Updated 3 minutes ago\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <card>\n            <template slot=\"header\">\n              <h5 class=\"title\">Prix crypto actuel</h5>\n              <p class=\"category\">Updated every 10 seconds</p>\n            </template>\n            <l-table :data=\"tableData.data\" :columns=\"tableData.columns\">\n              <template slot-scope=\"{ row }\">\n                <td>{{ row.nom }}</td>\n                <td>{{ row.prix }} $</td>\n              </template>\n            </l-table>\n            <div class=\"footer\">\n              <hr />\n              <div class=\"stats\">\n                <i class=\"fa fa-history\"></i> Updated 3 minutes ago\n              </div>\n            </div>\n          </card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChart from 'src/components/Charts/LineChart.vue'; // Assuming a custom chart component\n\nexport default {\n  components: {\n    LineChart,\n    LTable,\n    Card\n  },\n  data() {\n    return {\n      selectedCrypto: 'Bitcoin',\n      cryptoList: [\n        { nom: 'Bitcoin' },\n        { nom: 'Ethereum' },\n        { nom: 'BNB' },\n        { nom: 'Solana' },\n        { nom: 'XRP' },\n        { nom: 'TRUMP' }\n      ],\n      lineChart: {\n        data: {\n          labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n          series: [\n            [5, 10, 15, 20, 700, 30, 35],  // Données de Bitcoin par défaut\n            [30, 600, 90, 120, 150, 180, 210], // Autres données (à ajuster selon la crypto sélectionnée)\n          ]\n        },\n        options: {\n          low: 0,\n          high: 800,\n          showArea: false,\n          height: '245px',\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: true,\n          showLine: true,\n          showPoint: true,\n          fullWidth: true,\n          chartPadding: {\n            right: 50\n          }\n        },\n        responsiveOptions: [\n          ['screen and (max-width: 640px)', {\n            axisX: {\n              labelInterpolationFnc(value) {\n                return value[0];\n              }\n            }\n          }]\n        ]\n      },\n      tableData: {\n        data: [\n          { nom: 'Bitcoin', prix: 10.505 },\n          { nom: 'Ethereum', prix: 10405 },\n          { nom: 'BNB', prix: 5007 },\n          { nom: 'Solana', prix: 7087 },\n          { nom: 'XRP', prix: 407 },\n          { nom: 'TRUMP', prix: 800 }\n        ]\n      }\n    };\n  },\n  methods: {\n    updateChartData() {\n      // Modifier les données en fonction de la crypto sélectionnée\n      switch (this.selectedCrypto) {\n        case 'Bitcoin':\n          this.lineChart.data.series = [\n            [5, 10, 15, 20, 700, 30, 35],\n            [30, 600, 90, 120, 150, 180, 210],\n          ];\n          break;\n        case 'Ethereum':\n          this.lineChart.data.series = [\n            [10, 20, 30, 50, 200, 80, 90],\n            [15, 150, 60, 100, 180, 250, 300],\n          ];\n          break;\n        case 'BNB':\n          this.lineChart.data.series = [\n            [5, 5, 10, 15, 20, 25, 30],\n            [10, 20, 30, 40, 50, 60, 70],\n          ];\n          break;\n        case 'Solana':\n          this.lineChart.data.series = [\n            [1, 2, 3, 4, 5, 6, 7],\n            [10, 20, 30, 40, 50, 60, 70],\n          ];\n          break;\n        // Ajouter des cas pour d'autres cryptos selon besoin\n      }\n    }\n  },\n  mounted() {\n    // Mettre à jour les données au démarrage\n    this.updateChartData();\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  margin-bottom: 20px;\n}\n</style>\n"]}]}