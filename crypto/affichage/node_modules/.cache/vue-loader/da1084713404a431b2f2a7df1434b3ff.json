{"remainingRequest":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\UserLogin.vue?vue&type=style&index=0&id=2981e96a&scoped=true&lang=css","dependencies":[{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\UserLogin.vue","mtime":1738843385138},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\css-loader\\index.js","mtime":1737957114353},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1737957108442},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\postcss-loader\\src\\index.js","mtime":1737957113589},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBHbG9iYWwgcmVzZXQgZm9yIGNvbnNpc3RlbnQgc3R5bGluZyAqLw0KKiB7DQogIG1hcmdpbjogMDsNCiAgcGFkZGluZzogMDsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCn0NCg0KYm9keSB7DQogIGZvbnQtZmFtaWx5OiAnQXJpYWwnLCBzYW5zLXNlcmlmOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjEyOyAvKiBEYXJrIGJhY2tncm91bmQgZm9yIGEgY3J5cHRvIGZlZWwgKi8NCiAgY29sb3I6ICNlNGU0ZTQ7IC8qIExpZ2h0IHRleHQgZm9yIGNvbnRyYXN0ICovDQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBoZWlnaHQ6IDEwMHZoOw0KfQ0KDQoubG9naW4gew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTFlOyAvKiBTbGlnaHRseSBsaWdodGVyIGRhcmsgYmFja2dyb3VuZCAqLw0KICBwYWRkaW5nOiAzMHB4Ow0KICBib3JkZXItcmFkaXVzOiA4cHg7DQogIGJveC1zaGFkb3c6IDAgNHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjYpOw0KICB3aWR0aDogMTAwJTsNCiAgbWF4LXdpZHRoOiA0MDBweDsNCn0NCg0KaDIgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGZvbnQtc2l6ZTogMjRweDsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgY29sb3I6ICMwMGZmODg7IC8qIENyeXB0byBncmVlbiBhY2NlbnQgKi8NCn0NCg0KLmlucHV0LWdyb3VwIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KLmlucHV0LWdyb3VwIGxhYmVsIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgY29sb3I6ICNiYmI7DQogIG1hcmdpbi1ib3R0b206IDVweDsNCn0NCg0KLmlucHV0LWdyb3VwIGlucHV0IHsNCiAgd2lkdGg6IDEwMCU7DQogIHBhZGRpbmc6IDEycHg7DQogIGJhY2tncm91bmQtY29sb3I6ICMzMzM7IC8qIERhcmsgaW5wdXQgYmFja2dyb3VuZCAqLw0KICBjb2xvcjogI2U0ZTRlNDsNCiAgYm9yZGVyOiAycHggc29saWQgIzQ0NDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBmb250LXNpemU6IDE2cHg7DQogIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2UtaW4tb3V0Ow0KfQ0KDQouaW5wdXQtZ3JvdXAgaW5wdXQ6Zm9jdXMgew0KICBib3JkZXItY29sb3I6ICMwMGZmODg7IC8qIEdyZWVuIGJvcmRlciBvbiBmb2N1cyAqLw0KICBvdXRsaW5lOiBub25lOw0KfQ0KDQpidXR0b24gew0KICB3aWR0aDogMTAwJTsNCiAgcGFkZGluZzogMTJweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzAwZmY4ODsgLyogQ3J5cHRvIGdyZWVuICovDQogIGJvcmRlcjogbm9uZTsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBjb2xvcjogd2hpdGU7DQogIGZvbnQtc2l6ZTogMTZweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbi1vdXQ7DQp9DQoNCmJ1dHRvbjpob3ZlciB7DQogIGJhY2tncm91bmQtY29sb3I6ICMwMGNjNmE7IC8qIERhcmtlciBncmVlbiBvbiBob3ZlciAqLw0KfQ0KDQpidXR0b246Zm9jdXMgew0KICBvdXRsaW5lOiBub25lOw0KfQ0KDQpAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpIHsNCiAgLmxvZ2luIHsNCiAgICBwYWRkaW5nOiAyMHB4Ow0KICAgIHdpZHRoOiA5MCU7DQogIH0NCg0KICBoMiB7DQogICAgZm9udC1zaXplOiAyMHB4Ow0KICB9DQoNCiAgLmlucHV0LWdyb3VwIGlucHV0LCBidXR0b24gew0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["UserLogin.vue"],"names":[],"mappings":";AAuIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"UserLogin.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h2>Connexion</h2>\r\n    <form v-if=\"!pinRequired\" @submit.prevent=\"login\">\r\n      <div class=\"input-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input v-model=\"email\" type=\"email\" id=\"email\" required placeholder=\"Votre adresse email\" />\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input v-model=\"password\" type=\"password\" id=\"password\" required placeholder=\"Votre mot de passe\" />\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? \"Connexion...\" : \"Se connecter\" }}\r\n      </button>\r\n    </form>\r\n    \r\n\r\n     <form v-else @submit.prevent=\"verifyPin\">\r\n      <div class=\"input-group\">\r\n        <label for=\"pin\">Code PIN</label>\r\n        <input v-model=\"pin\" type=\"text\" id=\"pin\" required placeholder=\"Entrez le code PIN reçu\" />\r\n      </div>\r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? \"Vérification...\" : \"Valider le code PIN\" }}\r\n      </button>\r\n    </form>\r\n\r\n    <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n/* eslint-disable no-unused-vars */\r\ndata() {\r\n  return {\r\n    email: '',\r\n    password: '',\r\n    pinRequired: false,\r\n    loading: false,\r\n    errorMessage: '',\r\n  };\r\n},\r\n/* eslint-enable no-unused-vars */\r\n\r\n  methods: {\r\n    async login() {\r\n      this.loading = true;\r\n      this.errorMessage = '';\r\n\r\n      const loginrequest = {\r\n        Email: this.email,\r\n        MotDePasse: this.password,\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(loginrequest),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          // Gérer les erreurs retournées par l'API\r\n          this.errorMessage = data.message || 'Une erreur est survenue.';\r\n          return;\r\n        }\r\n\r\n        // Exemple : redirection vers une page\r\n        // this.$router.push('/AuthLogin.vue');\r\n        this.pinRequired = true;\r\n      } catch (error) {\r\n        this.errorMessage;\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async verifyPin() {\r\n      this.loading = true;\r\n      this.errorMessage = \"\";\r\n      console.log(\"Vérification du code PIN...\");\r\n\r\n      const pinRequest = {\r\n          Email: this.email,\r\n          Pin: this.pin,\r\n      };\r\n\r\n      try {\r\n          const response = await fetch(\"http://localhost:5000/Authentification\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(pinRequest),\r\n          });\r\n\r\n          const data = await response.json();\r\n\r\n\r\n          if (!response.ok) {\r\n              this.errorMessage = data.message || \"Code PIN invalide.\";\r\n              return;\r\n          }\r\n          data.role = 'not';\r\n          console.log(data.token);\r\n          if (data.token) {\r\n              localStorage.setItem(\"auth_token\", data.token);\r\n          } else {\r\n              console.error(\"Token non reçu :\", data);\r\n          }\r\n          // Store the token if needed\r\n          // localStorage.setItem(\"auth_token12\", data.token);\r\n         this.$emit('goToHome');\r\n\r\n          this.$emit('login-success', data.role);\r\n          \r\n      } catch (error) {\r\n          this.errorMessage;\r\n      } finally {\r\n          this.loading = false;\r\n      }\r\n  }\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Global reset for consistent styling */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Arial', sans-serif;\r\n  background-color: #121212; /* Dark background for a crypto feel */\r\n  color: #e4e4e4; /* Light text for contrast */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\n.login {\r\n  background-color: #1e1e1e; /* Slightly lighter dark background */\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #00ff88; /* Crypto green accent */\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-group label {\r\n  display: block;\r\n  font-size: 14px;\r\n  color: #bbb;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #333; /* Dark input background */\r\n  color: #e4e4e4;\r\n  border: 2px solid #444;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease-in-out;\r\n}\r\n\r\n.input-group input:focus {\r\n  border-color: #00ff88; /* Green border on focus */\r\n  outline: none;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #00ff88; /* Crypto green */\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #00cc6a; /* Darker green on hover */\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\n@media (max-width: 400px) {\r\n  .login {\r\n    padding: 20px;\r\n    width: 90%;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .input-group input, button {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>\r\n"]}]}