{"remainingRequest":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\Cards\\ChartCard.vue","mtime":1738573587339},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js","mtime":1737957106813},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IENhcmQgZnJvbSAnLi9DYXJkLnZ1ZScKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ2NoYXJ0LWNhcmQnLAogICAgY29tcG9uZW50czogewogICAgICBDYXJkCiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgY2hhcnRUeXBlOiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICdMaW5lJyAvLyBMaW5lIHwgUGllIHwgQmFyCiAgICAgIH0sCiAgICAgIGNoYXJ0RGF0YTogewogICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICB9LAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgZGVmYXVsdDogKCkgPT4gKHsKICAgICAgICAgIGhpZ2g6IDUwMCwKICAgICAgICAgIGxvdzogMCwKICAgICAgICAgIHNob3dBcmVhOiB0cnVlLAogICAgICAgICAgZnVsbFdpZHRoOiB0cnVlLAogICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgc2hvd0dyaWQ6IGZhbHNlLAogICAgICAgICAgICBzaG93TGFiZWw6IHRydWUsCiAgICAgICAgICAgIG9mZnNldDogNjAsCiAgICAgICAgICAgIGxhYmVsT2Zmc2V0OiB7IHg6IDAsIHk6IDUgfSwKICAgICAgICAgICAgYXhpc0xhYmVsSW50ZXJwb2xhdGlvbkZuYzogKHZhbHVlKSA9PiB2YWx1ZQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNZOiB7CiAgICAgICAgICAgIHNob3dHcmlkOiB0cnVlLAogICAgICAgICAgICBvZmZzZXQ6IDYwLAogICAgICAgICAgfSwKICAgICAgICAgIGNoYXJ0UGFkZGluZzogewogICAgICAgICAgICByaWdodDogMTAsCiAgICAgICAgICB9LAogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIHJlc3BvbnNpdmVPcHRpb25zOiBbT2JqZWN0LCBBcnJheV0KICAgIH0sCiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjaGFydElkOiAnbm8taWQnLAogICAgICAgICRDaGFydGlzdDogbnVsbCwKICAgICAgICBjaGFydDogbnVsbAogICAgICB9CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgY2hhcnREYXRhOiB7CiAgICAgICAgZGVlcDogdHJ1ZSwKICAgICAgICBoYW5kbGVyKG5ld0RhdGEpIHsKICAgICAgICAgIGlmICh0aGlzLmNoYXJ0KSB7CiAgICAgICAgICAgIHRoaXMuY2hhcnQudXBkYXRlKG5ld0RhdGEpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgaW5pdENoYXJ0ICgpIHsKICAgICAgICB2YXIgY2hhcnRJZFF1ZXJ5ID0gYCMke3RoaXMuY2hhcnRJZH1gCiAgICAgICAgdGhpcy5jaGFydCA9IHRoaXMuJENoYXJ0aXN0W3RoaXMuY2hhcnRUeXBlXShjaGFydElkUXVlcnksIHRoaXMuY2hhcnREYXRhLCB0aGlzLmNoYXJ0T3B0aW9ucywgdGhpcy5yZXNwb25zaXZlT3B0aW9ucykKICAgICAgICB0aGlzLiRlbWl0KCdpbml0aWFsaXplZCcsIHRoaXMuY2hhcnQpCgogICAgICAgIGlmICh0aGlzLmNoYXJ0VHlwZSA9PT0gJ0xpbmUnKSB7CiAgICAgICAgICB0aGlzLmFuaW1hdGVMaW5lQ2hhcnQoKQogICAgICAgIH0KICAgICAgICBpZiAodGhpcy5jaGFydFR5cGUgPT09ICdCYXInKSB7CiAgICAgICAgICB0aGlzLmFuaW1hdGVCYXJDaGFydCgpCiAgICAgICAgfQogICAgICB9LAogICAgICB1cGRhdGVDaGFydElkICgpIHsKICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLnRvU3RyaW5nKCkKICAgICAgICBjb25zdCByYW5kb21JbnQgPSB0aGlzLmdldFJhbmRvbUludCgwLCBjdXJyZW50VGltZSkKICAgICAgICB0aGlzLmNoYXJ0SWQgPSBgZGl2XyR7cmFuZG9tSW50fWAKICAgICAgfSwKICAgICAgZ2V0UmFuZG9tSW50IChtaW4sIG1heCkgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkpICsgbWluCiAgICAgIH0sCiAgICAgIGFuaW1hdGVMaW5lQ2hhcnQgKCkgewogICAgICAgIGxldCBzZXEgPSAwCiAgICAgICAgbGV0IGR1cmF0aW9ucyA9IDUwMAogICAgICAgIGxldCBkZWxheXMgPSA4MAogICAgICAgIHRoaXMuY2hhcnQub24oJ2RyYXcnLCAoZGF0YSkgPT4gewogICAgICAgICAgaWYgKGRhdGEudHlwZSA9PT0gJ2xpbmUnIHx8IGRhdGEudHlwZSA9PT0gJ2FyZWEnKSB7CiAgICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsKICAgICAgICAgICAgICBkOiB7CiAgICAgICAgICAgICAgICBiZWdpbjogNjAwLAogICAgICAgICAgICAgICAgZHVyOiA3MDAsCiAgICAgICAgICAgICAgICBmcm9tOiBkYXRhLnBhdGguY2xvbmUoKS5zY2FsZSgxLCAwKS50cmFuc2xhdGUoMCwgZGF0YS5jaGFydFJlY3QuaGVpZ2h0KCkpLnN0cmluZ2lmeSgpLAogICAgICAgICAgICAgICAgdG86IGRhdGEucGF0aC5jbG9uZSgpLnN0cmluZ2lmeSgpLAogICAgICAgICAgICAgICAgZWFzaW5nOiB0aGlzLiRDaGFydGlzdC5TdmcuRWFzaW5nLmVhc2VPdXRRdWludAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSBpZiAoZGF0YS50eXBlID09PSAncG9pbnQnKSB7CiAgICAgICAgICAgIHNlcSsrCiAgICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsKICAgICAgICAgICAgICBvcGFjaXR5OiB7CiAgICAgICAgICAgICAgICBiZWdpbjogc2VxICogZGVsYXlzLAogICAgICAgICAgICAgICAgZHVyOiBkdXJhdGlvbnMsCiAgICAgICAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgICAgICAgdG86IDEsCiAgICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIHNlcSA9IDAKICAgICAgfSwKICAgICAgYW5pbWF0ZUJhckNoYXJ0ICgpIHsKICAgICAgICBsZXQgc2VxID0gMAogICAgICAgIGxldCBkdXJhdGlvbnMgPSA1MDAKICAgICAgICBsZXQgZGVsYXlzID0gODAKICAgICAgICB0aGlzLmNoYXJ0Lm9uKCdkcmF3JywgKGRhdGEpID0+IHsKICAgICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdiYXInKSB7CiAgICAgICAgICAgIHNlcSsrCiAgICAgICAgICAgIGRhdGEuZWxlbWVudC5hbmltYXRlKHsKICAgICAgICAgICAgICBvcGFjaXR5OiB7CiAgICAgICAgICAgICAgICBiZWdpbjogc2VxICogZGVsYXlzLAogICAgICAgICAgICAgICAgZHVyOiBkdXJhdGlvbnMsCiAgICAgICAgICAgICAgICBmcm9tOiAwLAogICAgICAgICAgICAgICAgdG86IDEsCiAgICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlJwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9LAogICAgYXN5bmMgbW91bnRlZCAoKSB7CiAgICAgIHRoaXMudXBkYXRlQ2hhcnRJZCgpCiAgICAgIGNvbnN0IENoYXJ0aXN0ID0gYXdhaXQgaW1wb3J0KCdjaGFydGlzdCcpCiAgICAgIHRoaXMuJENoYXJ0aXN0ID0gQ2hhcnRpc3QuZGVmYXVsdCB8fCBDaGFydGlzdAogICAgICB0aGlzLmluaXRDaGFydCgpCiAgICB9CiAgfQo="},{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";AAcfile":"ChartCard.vue","sourceRoot":"src/components/Cards","sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\" v-if=\"$slots.header\">\n      <slot name=\"header\"></slot>\n    </div>\n    <div class=\"card-body\">\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\n    </div>\n    <div class=\"card-footer\" v-if=\"$slots.footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n<script>\n  import Card from './Card.vue'\n\n  export default {\n    name: 'chart-card',\n    components: {\n      Card\n    },\n    props: {\n      chartType: {\n        type: String,\n        default: 'Line' // Line | Pie | Bar\n      },\n      chartData: {\n        type: Object,\n        required: true\n      },\n      chartOptions: {\n        type: Object,\n        default: () => ({\n          high: 500,\n          low: 0,\n          showArea: true,\n          fullWidth: true,\n          axisX: {\n            showGrid: false,\n            showLabel: true,\n            offset: 60,\n            labelOffset: { x: 0, y: 5 },\n            axisLabelInterpolationFnc: (value) => value\n          },\n          axisY: {\n            showGrid: true,\n            offset: 60,\n          },\n          chartPadding: {\n            right: 10,\n          },\n        })\n      },\n      responsiveOptions: [Object, Array]\n    },\n    data () {\n      return {\n        chartId: 'no-id',\n        $Chartist: null,\n        chart: null\n      }\n    },\n    watch: {\n      chartData: {\n        deep: true,\n        handler(newData) {\n          if (this.chart) {\n            this.chart.update(newData);\n          }\n        }\n      }\n    },\n    methods: {\n      initChart () {\n        var chartIdQuery = `#${this.chartId}`\n        this.chart = this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.responsiveOptions)\n        this.$emit('initialized', this.chart)\n\n        if (this.chartType === 'Line') {\n          this.animateLineChart()\n        }\n        if (this.chartType === 'Bar') {\n          this.animateBarChart()\n        }\n      },\n      updateChartId () {\n        const currentTime = new Date().getTime().toString()\n        const randomInt = this.getRandomInt(0, currentTime)\n        this.chartId = `div_${randomInt}`\n      },\n      getRandomInt (min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min\n      },\n      animateLineChart () {\n        let seq = 0\n        let durations = 500\n        let delays = 80\n        this.chart.on('draw', (data) => {\n          if (data.type === 'line' || data.type === 'area') {\n            data.element.animate({\n              d: {\n                begin: 600,\n                dur: 700,\n                from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                to: data.path.clone().stringify(),\n                easing: this.$Chartist.Svg.Easing.easeOutQuint\n              }\n            })\n          } else if (data.type === 'point') {\n            seq++\n            data.element.animate({\n              opacity: {\n                begin: seq * delays,\n                dur: durations,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            })\n          }\n        })\n        seq = 0\n      },\n      animateBarChart () {\n        let seq = 0\n        let durations = 500\n        let delays = 80\n        this.chart.on('draw', (data) => {\n          if (data.type === 'bar') {\n            seq++\n            data.element.animate({\n              opacity: {\n                begin: seq * delays,\n                dur: durations,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            })\n          }\n        })\n      }\n    },\n    async mounted () {\n      this.updateChartId()\n      const Chartist = await import('chartist')\n      this.$Chartist = Chartist.default || Chartist\n      this.initChart()\n    }\n  }\n</script>\n"]}]}