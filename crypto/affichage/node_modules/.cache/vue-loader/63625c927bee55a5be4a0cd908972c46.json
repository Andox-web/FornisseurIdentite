{"remainingRequest":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\Cards\\ChartCard.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\Cards\\ChartCard.vue","mtime":1738121532796},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1737957113872},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js","mtime":1737957106813},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgaW1wb3J0IENhcmQgZnJvbSAnLi9DYXJkLnZ1ZScKCiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ2NoYXJ0LWNhcmQnLAogICAgY29tcG9uZW50czogewogICAgICBDYXJkCiAgICB9LAogICAgcHJvcHM6IHsKICAgICAgY2hhcnRUeXBlOiB7CiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICdMaW5lJyAvLyBMaW5lIHwgUGllIHwgQmFyCiAgICAgIH0sCiAgICAgIGNoYXJ0RGF0YTogewogICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICB9LAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaGlnaDogNTAwLCAvLyBEw6lmaW5pciB1bmUgdmFsZXVyIMOpbGV2w6llIHBvdXIgbCfDqWNoZWxsZSBkdSBncmFwaGlxdWUKICAgICAgICAgICAgbG93OiAwLCAgICAvLyBWYWxldXIgbWluaW1hbGUKICAgICAgICAgICAgc2hvd0FyZWE6IHRydWUsIC8vIFN0eWxlIGRlIGdyYXBoaXF1ZSBlbiBhaXJlIChzaW1pbGFpcmUgw6AgVHJhZGluZ1ZpZXcpCiAgICAgICAgICAgIGZ1bGxXaWR0aDogdHJ1ZSwgLy8gUyfDqXRlbmQgc3VyIHRvdXRlIGxhIGxhcmdldXIKICAgICAgICAgICAgYXhpc1g6IHsKICAgICAgICAgICAgICBzaG93R3JpZDogZmFsc2UsIC8vIE1hc3F1ZXIgbGEgZ3JpbGxlIHN1ciBsJ2F4ZSBYCiAgICAgICAgICAgICAgc2hvd0xhYmVsOiB0cnVlLCAvLyBBZmZpY2hlciBsZXMgw6l0aXF1ZXR0ZXMgc3VyIGwnYXhlIFgKICAgICAgICAgICAgICBvZmZzZXQ6IDYwLCAvLyBFc3BhY2VtZW50IMOgIGdhdWNoZSBwb3VyIGxlcyDDqXRpcXVldHRlcwogICAgICAgICAgICAgIGxhYmVsT2Zmc2V0OiB7CiAgICAgICAgICAgICAgICB4OiAwLAogICAgICAgICAgICAgICAgeTogNQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgLy8gQ2VudHJlciBsZSBncmFwaGlxdWUgc3VyIGxhIGRlcm5pw6hyZSB2YWxldXIgZW4gZMOpY2FsYW50IGR5bmFtaXF1ZW1lbnQKICAgICAgICAgICAgICBheGlzTGFiZWxJbnRlcnBvbGF0aW9uRm5jOiAodmFsdWUpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSAvLyBSZXRpcmVyIG91IGFqdXN0ZXIgc2kgbsOpY2Vzc2FpcmUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGF4aXNZOiB7CiAgICAgICAgICAgICAgc2hvd0dyaWQ6IHRydWUsIC8vIEFmZmljaGVyIGxhIGdyaWxsZSBzdXIgbCdheGUgWQogICAgICAgICAgICAgIG9mZnNldDogNjAsIC8vIEVzcGFjZW1lbnQgcG91ciBsZXMgw6l0aXF1ZXR0ZXMgc3VyIGwnYXhlIFkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY2hhcnRQYWRkaW5nOiB7CiAgICAgICAgICAgICAgcmlnaHQ6IDEwLCAvLyBBam91dGVyIHVuIHBldSBkZSBtYXJnZSDDoCBkcm9pdGUKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIHJlc3BvbnNpdmVPcHRpb25zOiBbT2JqZWN0LCBBcnJheV0KICAgIH0sCiAgICBkYXRhICgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjaGFydElkOiAnbm8taWQnLAogICAgICAgICRDaGFydGlzdDogbnVsbCwKICAgICAgICBjaGFydDogbnVsbCwKICAgICAgICBjaGFydERhdGE6IHsKICAgICAgICAgIGxhYmVsczogW10sCiAgICAgICAgICBzZXJpZXM6IFtdCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBpbml0Q2hhcnQgKCkgewogICAgICAgIHZhciBjaGFydElkUXVlcnkgPSBgIyR7dGhpcy5jaGFydElkfWAKICAgICAgICB0aGlzLmNoYXJ0ID0gdGhpcy4kQ2hhcnRpc3RbdGhpcy5jaGFydFR5cGVdKGNoYXJ0SWRRdWVyeSwgdGhpcy5jaGFydERhdGEsIHRoaXMuY2hhcnRPcHRpb25zLCB0aGlzLnJlc3BvbnNpdmVPcHRpb25zKQogICAgICAgIHRoaXMuJGVtaXQoJ2luaXRpYWxpemVkJywgdGhpcy5jaGFydCkKCiAgICAgICAgaWYgKHRoaXMuY2hhcnRUeXBlID09PSAnTGluZScpIHsKICAgICAgICAgIHRoaXMuYW5pbWF0ZUxpbmVDaGFydCgpCiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLmNoYXJ0VHlwZSA9PT0gJ0JhcicpIHsKICAgICAgICAgIHRoaXMuYW5pbWF0ZUJhckNoYXJ0KCkKICAgICAgICB9CgogICAgICAgIC8vIENlbnRyZXIgbGUgZ3JhcGhpcXVlIHN1ciBsYSBkZXJuacOocmUgZG9ubsOpZSAoWC1heGlzIGTDqWNhbMOpKQogICAgICAgIHRoaXMuY2hhcnQub24oJ2NyZWF0ZWQnLCAoKSA9PiB7CiAgICAgICAgICBjb25zdCBsYXN0TGFiZWwgPSB0aGlzLmNoYXJ0RGF0YS5sYWJlbHNbdGhpcy5jaGFydERhdGEubGFiZWxzLmxlbmd0aCAtIDFdOwogICAgICAgICAgY29uc3QgY2hhcnRXaWR0aCA9IHRoaXMuY2hhcnQuc3ZnLndpZHRoKCk7CiAgICAgICAgICB0aGlzLmNoYXJ0LnN2Zy50cmFuc2xhdGUoY2hhcnRXaWR0aCAtIDEwMCwgMCk7IC8vIEFqdXN0ZXIgY2V0dGUgdmFsZXVyIHNpIG7DqWNlc3NhaXJlCiAgICAgICAgfSkKICAgICAgfSwKICAgICAgdXBkYXRlQ2hhcnRJZCAoKSB7CiAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKS50b1N0cmluZygpCiAgICAgICAgY29uc3QgcmFuZG9tSW50ID0gdGhpcy5nZXRSYW5kb21JbnQoMCwgY3VycmVudFRpbWUpCiAgICAgICAgdGhpcy5jaGFydElkID0gYGRpdl8ke3JhbmRvbUludH1gCiAgICAgIH0sCiAgICAgIGdldFJhbmRvbUludCAobWluLCBtYXgpIHsKICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKSArIG1pbgogICAgICB9LAogICAgICBhbmltYXRlTGluZUNoYXJ0ICgpIHsKICAgICAgICBsZXQgc2VxID0gMAogICAgICAgIGxldCBkdXJhdGlvbnMgPSA1MDAKICAgICAgICBsZXQgZGVsYXlzID0gODAKICAgICAgICB0aGlzLmNoYXJ0Lm9uKCdkcmF3JywgKGRhdGEpID0+IHsKICAgICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdsaW5lJyB8fCBkYXRhLnR5cGUgPT09ICdhcmVhJykgewogICAgICAgICAgICBkYXRhLmVsZW1lbnQuYW5pbWF0ZSh7CiAgICAgICAgICAgICAgZDogewogICAgICAgICAgICAgICAgYmVnaW46IDYwMCwKICAgICAgICAgICAgICAgIGR1cjogNzAwLAogICAgICAgICAgICAgICAgZnJvbTogZGF0YS5wYXRoLmNsb25lKCkuc2NhbGUoMSwgMCkudHJhbnNsYXRlKDAsIGRhdGEuY2hhcnRSZWN0LmhlaWdodCgpKS5zdHJpbmdpZnkoKSwKICAgICAgICAgICAgICAgIHRvOiBkYXRhLnBhdGguY2xvbmUoKS5zdHJpbmdpZnkoKSwKICAgICAgICAgICAgICAgIGVhc2luZzogdGhpcy4kQ2hhcnRpc3QuU3ZnLkVhc2luZy5lYXNlT3V0UXVpbnQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gJ3BvaW50JykgewogICAgICAgICAgICBzZXErKwogICAgICAgICAgICBkYXRhLmVsZW1lbnQuYW5pbWF0ZSh7CiAgICAgICAgICAgICAgb3BhY2l0eTogewogICAgICAgICAgICAgICAgYmVnaW46IHNlcSAqIGRlbGF5cywKICAgICAgICAgICAgICAgIGR1cjogZHVyYXRpb25zLAogICAgICAgICAgICAgICAgZnJvbTogMCwKICAgICAgICAgICAgICAgIHRvOiAxLAogICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICBzZXEgPSAwCiAgICAgIH0sCiAgICAgIGFuaW1hdGVCYXJDaGFydCAoKSB7CiAgICAgICAgbGV0IHNlcSA9IDAKICAgICAgICBsZXQgZHVyYXRpb25zID0gNTAwCiAgICAgICAgbGV0IGRlbGF5cyA9IDgwCiAgICAgICAgdGhpcy5jaGFydC5vbignZHJhdycsIChkYXRhKSA9PiB7CiAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnYmFyJykgewogICAgICAgICAgICBzZXErKwogICAgICAgICAgICBkYXRhLmVsZW1lbnQuYW5pbWF0ZSh7CiAgICAgICAgICAgICAgb3BhY2l0eTogewogICAgICAgICAgICAgICAgYmVnaW46IHNlcSAqIGRlbGF5cywKICAgICAgICAgICAgICAgIGR1cjogZHVyYXRpb25zLAogICAgICAgICAgICAgICAgZnJvbTogMCwKICAgICAgICAgICAgICAgIHRvOiAxLAogICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfQogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQgKCkgewogICAgICB0aGlzLnVwZGF0ZUNoYXJ0SWQoKQogICAgICBjb25zdCBDaGFydGlzdCA9IGF3YWl0IGltcG9ydCgnY2hhcnRpc3QnKQogICAgICB0aGlzLiRDaGFydGlzdCA9IENoYXJ0aXN0LmRlZmF1bHQgfHwgQ2hhcnRpc3QKICAgICAgdGhpcy5pbml0Q2hhcnQoKQogICAgfQogIH0K"},{"version":3,"sources":["ChartCard.vue"],"names":[],"mappings":";AAeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartCard.vue","sourceRoot":"src/components/Cards","sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-header\" v-if=\"$slots.header\">\n      <slot name=\"header\"></slot>\n    </div>\n    <div class=\"card-body\">\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\n    </div>\n    <div class=\"card-footer\" v-if=\"$slots.footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Card from './Card.vue'\n\n  export default {\n    name: 'chart-card',\n    components: {\n      Card\n    },\n    props: {\n      chartType: {\n        type: String,\n        default: 'Line' // Line | Pie | Bar\n      },\n      chartData: {\n        type: Object,\n        required: true\n      },\n      chartOptions: {\n        type: Object,\n        default: () => {\n          return {\n            high: 500, // Définir une valeur élevée pour l'échelle du graphique\n            low: 0,    // Valeur minimale\n            showArea: true, // Style de graphique en aire (similaire à TradingView)\n            fullWidth: true, // S'étend sur toute la largeur\n            axisX: {\n              showGrid: false, // Masquer la grille sur l'axe X\n              showLabel: true, // Afficher les étiquettes sur l'axe X\n              offset: 60, // Espacement à gauche pour les étiquettes\n              labelOffset: {\n                x: 0,\n                y: 5\n              },\n              // Centrer le graphique sur la dernière valeur en décalant dynamiquement\n              axisLabelInterpolationFnc: (value) => {\n                return value // Retirer ou ajuster si nécessaire\n              }\n            },\n            axisY: {\n              showGrid: true, // Afficher la grille sur l'axe Y\n              offset: 60, // Espacement pour les étiquettes sur l'axe Y\n            },\n            chartPadding: {\n              right: 10, // Ajouter un peu de marge à droite\n            },\n          }\n        }\n      },\n      responsiveOptions: [Object, Array]\n    },\n    data () {\n      return {\n        chartId: 'no-id',\n        $Chartist: null,\n        chart: null,\n        chartData: {\n          labels: [],\n          series: []\n        }\n      }\n    },\n    methods: {\n      initChart () {\n        var chartIdQuery = `#${this.chartId}`\n        this.chart = this.$Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions, this.responsiveOptions)\n        this.$emit('initialized', this.chart)\n\n        if (this.chartType === 'Line') {\n          this.animateLineChart()\n        }\n        if (this.chartType === 'Bar') {\n          this.animateBarChart()\n        }\n\n        // Centrer le graphique sur la dernière donnée (X-axis décalé)\n        this.chart.on('created', () => {\n          const lastLabel = this.chartData.labels[this.chartData.labels.length - 1];\n          const chartWidth = this.chart.svg.width();\n          this.chart.svg.translate(chartWidth - 100, 0); // Ajuster cette valeur si nécessaire\n        })\n      },\n      updateChartId () {\n        const currentTime = new Date().getTime().toString()\n        const randomInt = this.getRandomInt(0, currentTime)\n        this.chartId = `div_${randomInt}`\n      },\n      getRandomInt (min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min\n      },\n      animateLineChart () {\n        let seq = 0\n        let durations = 500\n        let delays = 80\n        this.chart.on('draw', (data) => {\n          if (data.type === 'line' || data.type === 'area') {\n            data.element.animate({\n              d: {\n                begin: 600,\n                dur: 700,\n                from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n                to: data.path.clone().stringify(),\n                easing: this.$Chartist.Svg.Easing.easeOutQuint\n              }\n            })\n          } else if (data.type === 'point') {\n            seq++\n            data.element.animate({\n              opacity: {\n                begin: seq * delays,\n                dur: durations,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            })\n          }\n        })\n        seq = 0\n      },\n      animateBarChart () {\n        let seq = 0\n        let durations = 500\n        let delays = 80\n        this.chart.on('draw', (data) => {\n          if (data.type === 'bar') {\n            seq++\n            data.element.animate({\n              opacity: {\n                begin: seq * delays,\n                dur: durations,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            })\n          }\n        })\n      }\n    },\n    async mounted () {\n      this.updateChartId()\n      const Chartist = await import('chartist')\n      this.$Chartist = Chartist.default || Chartist\n      this.initChart()\n    }\n  }\n</script>\n\n<style scoped>\n.ct-chart {\n  height: 300px; /* Définir une hauteur fixe pour le graphique */\n  width: 100%; /* S'assurer que le graphique prend toute la largeur */\n}\n\n.card {\n  margin: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  padding: 10px;\n  background-color: #f7f7f7;\n  font-size: 1.2em;\n  font-weight: bold;\n}\n\n.card-footer {\n  padding: 10px;\n  background-color: #f7f7f7;\n}\n</style>\n"]}]}