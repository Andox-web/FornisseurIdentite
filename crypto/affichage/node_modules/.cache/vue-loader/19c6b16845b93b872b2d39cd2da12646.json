{"remainingRequest":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\MyHistoric.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\MyHistoric.vue","mtime":1739040699805},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js","mtime":1737957106813},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IExUYWJsZSBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJsZS52dWUnDQogICAgaW1wb3J0IENhcmQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQ2FyZHMvQ2FyZC52dWUnDQogIA0KICAgIGNvbnN0IHRhYmxlQ29sdW1ucyA9IFsnSWQnLCAnY3J5cHRvJywgJ3R5cGUnLCAnbW9udGFudCcsICdVdGlsaXNhdGV1ciddDQogIA0KICAgIGV4cG9ydCBkZWZhdWx0IHsNCiAgICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgTFRhYmxlLA0KICAgICAgICBDYXJkDQogICAgICB9LA0KICAgICAgZGF0YSAoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgdGFibGUxOiB7DQogICAgICAgICAgICBjb2x1bW5zOiBbLi4udGFibGVDb2x1bW5zXSwNCiAgICAgICAgICAgIGRhdGE6IFtdIC8vIEluaXRpYWxpc2F0aW9uIGRlcyBkb25uw6llcyBjb21tZSB2aWRlDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9LA0KICAgICAgY3JlYXRlZCgpIHsNCiAgICAgICAgdGhpcy5mZXRjaFRyYW5zYWN0aW9ucygpOw0KICAgICAgfSwNCiAgICAgIG1ldGhvZHM6IHsNCiAgICAgICAgZmV0Y2hUcmFuc2FjdGlvbnMoKSB7DQogICAgICAgICAgLy8gVXRpbGlzYXRpb24gZGUgbGEgbcOpdGhvZGUgZmV0Y2ggcG91ciBhcHBlbGVyIGwnQVBJDQogICAgICAgICAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS90cmFuc2FjdGlvbnMnKSAgLy8gUmVtcGxhY2V6IHBhciBsJ1VSTCByw6llbGxlIGRlIHZvdHJlIEFQSQ0KICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQ0KICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7DQogICAgICAgICAgICAgIC8vIFRyYWl0ZW1lbnQgZGVzIGRvbm7DqWVzIHJlw6d1ZXMNCiAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25zID0gZGF0YS5yZWhldHJhLm1hcCh0cmFuc2FjdGlvbiA9PiB7DQogICAgICAgICAgICAgICAgLy8gRMOpdGVybWluZXIgbGUgdHlwZSBlbiBmb25jdGlvbiBkZSBsYSBwcsOpc2VuY2UgZGUgdmVuZGV1ciBvdSBhY2hldGV1cg0KICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSB0cmFuc2FjdGlvbi52ZW5kZXVyID8gJ3ZlbnRlJyA6ICdhY2hhdCc7DQogICAgICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICAgIGlkOiB0cmFuc2FjdGlvbi5pZCwNCiAgICAgICAgICAgICAgICAgIGNyeXB0bzogdHJhbnNhY3Rpb24uY3J5cHRvbW9ubmFpZS5ub20sDQogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlLA0KICAgICAgICAgICAgICAgICAgbW9udGFudDogYCQkeyh0cmFuc2FjdGlvbi5xdWFudGl0ZWNyeXB0byAqIHRyYW5zYWN0aW9uLmFubm9uY2VWZW50ZS5wcml4KS50b0ZpeGVkKDIpfWAsIC8vIENhbGN1bCBkdSBtb250YW50DQogICAgICAgICAgICAgICAgICB1dGlsaXNhdGV1cjogdHJhbnNhY3Rpb24udmVuZGV1ciA/IHRyYW5zYWN0aW9uLnZlbmRldXIubm9tIDogdHJhbnNhY3Rpb24uYWNoZXRldXIubm9tDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICB9KTsNCiAgDQogICAgICAgICAgICAgIC8vIE1ldHRyZSDDoCBqb3VyIGxhIHRhYmxlIGF2ZWMgbGVzIG5vdXZlbGxlcyBkb25uw6llcw0KICAgICAgICAgICAgICB0aGlzLnRhYmxlMS5kYXRhID0gdHJhbnNhY3Rpb25zOw0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBsb3JzIGRlIGxhIHLDqWN1cMOpcmF0aW9uIGRlcyB0cmFuc2FjdGlvbnM6JywgZXJyb3IpOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQogICAgICAgIGhhbmRsZUJ1dHRvbkNsaWNrKCkgew0KICAgICAgICAgIC8vIFRyYWl0ZW1lbnQgZHUgY2xpYyBzdXIgdW4gYm91dG9uIGRhbnMgbGEgdGFibGUgc2kgbsOpY2Vzc2FpcmUNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAg"},{"version":3,"sources":["MyHistoric.vue"],"names":[],"mappings":";AAyBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyHistoric.vue","sourceRoot":"src/pages/frontoffice","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <card class=\"strpied-tabled-with-hover\"\r\n                  body-classes=\"table-full-width table-responsive\"\r\n            >\r\n              <template slot=\"header\">\r\n                <h4 class=\"card-title\">Historique de vos transactions</h4>\r\n                <p class=\"card-category\">liste de vos transactions</p>\r\n              </template>\r\n              <l-table class=\"table-hover table-striped\"\r\n                       :columns=\"table1.columns\"\r\n                       :data=\"table1.data\"\r\n                       @button-clicked=\"handleButtonClick\">\r\n              </l-table>\r\n            </card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    import LTable from 'src/components/Table.vue'\r\n    import Card from 'src/components/Cards/Card.vue'\r\n  \r\n    const tableColumns = ['Id', 'crypto', 'type', 'montant', 'Utilisateur']\r\n  \r\n    export default {\r\n      components: {\r\n        LTable,\r\n        Card\r\n      },\r\n      data () {\r\n        return {\r\n          table1: {\r\n            columns: [...tableColumns],\r\n            data: [] // Initialisation des données comme vide\r\n          }\r\n        }\r\n      },\r\n      created() {\r\n        this.fetchTransactions();\r\n      },\r\n      methods: {\r\n        fetchTransactions() {\r\n          // Utilisation de la méthode fetch pour appeler l'API\r\n          fetch('http://localhost:8081/transactions')  // Remplacez par l'URL réelle de votre API\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              // Traitement des données reçues\r\n              const transactions = data.rehetra.map(transaction => {\r\n                // Déterminer le type en fonction de la présence de vendeur ou acheteur\r\n                const type = transaction.vendeur ? 'vente' : 'achat';\r\n                return {\r\n                  id: transaction.id,\r\n                  crypto: transaction.cryptomonnaie.nom,\r\n                  type: type,\r\n                  montant: `$${(transaction.quantitecrypto * transaction.annonceVente.prix).toFixed(2)}`, // Calcul du montant\r\n                  utilisateur: transaction.vendeur ? transaction.vendeur.nom : transaction.acheteur.nom\r\n                }\r\n              });\r\n  \r\n              // Mettre à jour la table avec les nouvelles données\r\n              this.table1.data = transactions;\r\n            })\r\n            .catch(error => {\r\n              console.error('Erreur lors de la récupération des transactions:', error);\r\n            });\r\n        },\r\n        handleButtonClick() {\r\n          // Traitement du clic sur un bouton dans la table si nécessaire\r\n        }\r\n      }\r\n    }\r\n  </script>\r\n  \r\n  <style>\r\n  </style>\r\n  "]}]}