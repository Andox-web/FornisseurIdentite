{"remainingRequest":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\Historic.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\Historic.vue","mtime":1738853544395},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\.babelrc","mtime":1737956864101},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js","mtime":1737957106813},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"C:\\Users\\finoa\\Documents\\GitHub\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IExUYWJsZSBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJsZS52dWUnOwppbXBvcnQgQ2FyZCBmcm9tICdzcmMvY29tcG9uZW50cy9DYXJkcy9DYXJkLnZ1ZSc7CnZhciB0YWJsZUNvbHVtbnMgPSBbJ0lkJywgJ2NyeXB0bycsICd0eXBlJywgJ21vbnRhbnQnLCAnVXRpbGlzYXRldXInXTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExUYWJsZTogTFRhYmxlLAogICAgQ2FyZDogQ2FyZAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlMTogewogICAgICAgIGNvbHVtbnM6IFtdLmNvbmNhdCh0YWJsZUNvbHVtbnMpLAogICAgICAgIGRhdGE6IFtdIC8vIEluaXRpYWxpc2F0aW9uIGRlcyBkb25uw6llcyBjb21tZSB2aWRlCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5mZXRjaFRyYW5zYWN0aW9ucygpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hUcmFuc2FjdGlvbnM6IGZ1bmN0aW9uIGZldGNoVHJhbnNhY3Rpb25zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICAvLyBVdGlsaXNhdGlvbiBkZSBsYSBtw6l0aG9kZSBmZXRjaCBwb3VyIGFwcGVsZXIgbCdBUEkKICAgICAgZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MS90cmFuc2FjdGlvbnMnKSAvLyBSZW1wbGFjZXogcGFyIGwnVVJMIHLDqWVsbGUgZGUgdm90cmUgQVBJCiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAvLyBUcmFpdGVtZW50IGRlcyBkb25uw6llcyByZcOndWVzCiAgICAgICAgdmFyIHRyYW5zYWN0aW9ucyA9IGRhdGEucmVoZXRyYS5tYXAoZnVuY3Rpb24gKHRyYW5zYWN0aW9uKSB7CiAgICAgICAgICAvLyBEw6l0ZXJtaW5lciBsZSB0eXBlIGVuIGZvbmN0aW9uIGRlIGxhIHByw6lzZW5jZSBkZSB2ZW5kZXVyIG91IGFjaGV0ZXVyCiAgICAgICAgICB2YXIgdHlwZSA9IHRyYW5zYWN0aW9uLnZlbmRldXIgPyAndmVudGUnIDogJ2FjaGF0JzsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlkOiB0cmFuc2FjdGlvbi5pZCwKICAgICAgICAgICAgY3J5cHRvOiB0cmFuc2FjdGlvbi5jcnlwdG9tb25uYWllLm5vbSwKICAgICAgICAgICAgdHlwZTogdHlwZSwKICAgICAgICAgICAgbW9udGFudDogIiQiLmNvbmNhdCgodHJhbnNhY3Rpb24ucXVhbnRpdGVjcnlwdG8gKiB0cmFuc2FjdGlvbi5hbm5vbmNlVmVudGUucHJpeCkudG9GaXhlZCgyKSksCiAgICAgICAgICAgIC8vIENhbGN1bCBkdSBtb250YW50CiAgICAgICAgICAgIHV0aWxpc2F0ZXVyOiB0cmFuc2FjdGlvbi52ZW5kZXVyID8gdHJhbnNhY3Rpb24udmVuZGV1ci5ub20gOiB0cmFuc2FjdGlvbi5hY2hldGV1ci5ub20KICAgICAgICAgIH07CiAgICAgICAgfSk7CgogICAgICAgIC8vIE1ldHRyZSDDoCBqb3VyIGxhIHRhYmxlIGF2ZWMgbGVzIG5vdXZlbGxlcyBkb25uw6llcwogICAgICAgIF90aGlzLnRhYmxlMS5kYXRhID0gdHJhbnNhY3Rpb25zOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkZSBsYSByw6ljdXDDqXJhdGlvbiBkZXMgdHJhbnNhY3Rpb25zOicsIGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQnV0dG9uQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUJ1dHRvbkNsaWNrKCkgewogICAgICAvLyBUcmFpdGVtZW50IGR1IGNsaWMgc3VyIHVuIGJvdXRvbiBkYW5zIGxhIHRhYmxlIHNpIG7DqWNlc3NhaXJlCiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["LTable","Card","tableColumns","components","data","table1","columns","concat","created","fetchTransactions","methods","_this","fetch","then","response","json","transactions","rehetra","map","transaction","type","vendeur","id","crypto","cryptomonnaie","nom","montant","quantitecrypto","annonceVente","prix","toFixed","utilisateur","acheteur","catch","error","console","handleButtonClick"],"sources":["src/pages/frontoffice/Historic.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <card class=\"strpied-tabled-with-hover\"\n                body-classes=\"table-full-width table-responsive\"\n          >\n            <template slot=\"header\">\n              <h4 class=\"card-title\">Historique des transactions</h4>\n              <p class=\"card-category\">liste de vos transactions</p>\n            </template>\n            <l-table class=\"table-hover table-striped\"\n                     :columns=\"table1.columns\"\n                     :data=\"table1.data\"\n                     @button-clicked=\"handleButtonClick\">\n            </l-table>\n          </card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import LTable from 'src/components/Table.vue'\n  import Card from 'src/components/Cards/Card.vue'\n\n  const tableColumns = ['Id', 'crypto', 'type', 'montant', 'Utilisateur']\n\n  export default {\n    components: {\n      LTable,\n      Card\n    },\n    data () {\n      return {\n        table1: {\n          columns: [...tableColumns],\n          data: [] // Initialisation des données comme vide\n        }\n      }\n    },\n    created() {\n      this.fetchTransactions();\n    },\n    methods: {\n      fetchTransactions() {\n        // Utilisation de la méthode fetch pour appeler l'API\n        fetch('http://localhost:8081/transactions')  // Remplacez par l'URL réelle de votre API\n          .then(response => response.json())\n          .then(data => {\n            // Traitement des données reçues\n            const transactions = data.rehetra.map(transaction => {\n              // Déterminer le type en fonction de la présence de vendeur ou acheteur\n              const type = transaction.vendeur ? 'vente' : 'achat';\n              return {\n                id: transaction.id,\n                crypto: transaction.cryptomonnaie.nom,\n                type: type,\n                montant: `$${(transaction.quantitecrypto * transaction.annonceVente.prix).toFixed(2)}`, // Calcul du montant\n                utilisateur: transaction.vendeur ? transaction.vendeur.nom : transaction.acheteur.nom\n              }\n            });\n\n            // Mettre à jour la table avec les nouvelles données\n            this.table1.data = transactions;\n          })\n          .catch(error => {\n            console.error('Erreur lors de la récupération des transactions:', error);\n          });\n      },\n      handleButtonClick() {\n        // Traitement du clic sur un bouton dans la table si nécessaire\n      }\n    }\n  }\n</script>\n\n<style>\n</style>\n"],"mappings":"AAyBA,OAAAA,MAAA;AACA,OAAAC,IAAA;AAEA,IAAAC,YAAA;AAEA;EACAC,UAAA;IACAH,MAAA,EAAAA,MAAA;IACAC,IAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;QACAC,OAAA,KAAAC,MAAA,CAAAL,YAAA;QACAE,IAAA;MACA;IACA;EACA;EACAI,OAAA,WAAAA,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACAD,iBAAA,WAAAA,kBAAA;MAAA,IAAAE,KAAA;MACA;MACAC,KAAA;MAAA,CACAC,IAAA,WAAAC,QAAA;QAAA,OAAAA,QAAA,CAAAC,IAAA;MAAA,GACAF,IAAA,WAAAT,IAAA;QACA;QACA,IAAAY,YAAA,GAAAZ,IAAA,CAAAa,OAAA,CAAAC,GAAA,WAAAC,WAAA;UACA;UACA,IAAAC,IAAA,GAAAD,WAAA,CAAAE,OAAA;UACA;YACAC,EAAA,EAAAH,WAAA,CAAAG,EAAA;YACAC,MAAA,EAAAJ,WAAA,CAAAK,aAAA,CAAAC,GAAA;YACAL,IAAA,EAAAA,IAAA;YACAM,OAAA,MAAAnB,MAAA,EAAAY,WAAA,CAAAQ,cAAA,GAAAR,WAAA,CAAAS,YAAA,CAAAC,IAAA,EAAAC,OAAA;YAAA;YACAC,WAAA,EAAAZ,WAAA,CAAAE,OAAA,GAAAF,WAAA,CAAAE,OAAA,CAAAI,GAAA,GAAAN,WAAA,CAAAa,QAAA,CAAAP;UACA;QACA;;QAEA;QACAd,KAAA,CAAAN,MAAA,CAAAD,IAAA,GAAAY,YAAA;MACA,GACAiB,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,qDAAAA,KAAA;MACA;IACA;IACAE,iBAAA,WAAAA,kBAAA;MACA;IAAA;EAEA;AACA","ignoreList":[]}]}