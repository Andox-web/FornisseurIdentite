{"ast":null,"code":"export default {\n  // eslint-disable-next-line no-unused-vars\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: ''\n    };\n  },\n  // eslint-disable-next-line no-unused-vars\n  methods: {\n    async register() {\n      // Données à envoyer à l'API\n      const utilisateur = {\n        Nom: this.name,\n        Email: this.email,\n        MotDePasse: this.password\n      };\n      try {\n        // Envoi de la requête POST à l'API .NET\n        const response = await fetch('http://localhost:5000/inscription', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(utilisateur)\n        });\n\n        // Vérification du statut de la réponse\n        if (response.ok) {\n          const data = await response.json();\n          alert(\"Inscription réussie. Un email de validation a été envoyé.\"); // Afficher la réponse du serveur\n        } else {\n          const errorData = await response.json();\n          alert('Erreur : ' + errorData); // Afficher un message d'erreur\n        }\n      } catch (error) {\n        console.log(error.Message); // Gestion des erreurs\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","name","email","password","methods","register","utilisateur","Nom","Email","MotDePasse","response","fetch","method","headers","body","JSON","stringify","ok","json","alert","errorData","error","console","log","Message"],"sources":["C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\UserSignup.vue"],"sourcesContent":["<template>\r\n  <div class=\"signup\">\r\n    <h2>Inscription</h2>\r\n    <form @submit.prevent=\"register\">\r\n      <div class=\"input-group\">\r\n        <label for=\"name\">Nom</label>\r\n        <input v-model=\"name\" type=\"text\" id=\"name\" required placeholder=\"Votre nom\" />\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input v-model=\"email\" type=\"email\" id=\"email\" required placeholder=\"Votre email\" />\r\n      </div>\r\n      <div class=\"input-group\">\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input v-model=\"password\" type=\"password\" id=\"password\" required placeholder=\"Mot de passe\" />\r\n      </div>\r\n      <button type=\"submit\">S'inscrire</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // eslint-disable-next-line no-unused-vars\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n  },\r\n  // eslint-disable-next-line no-unused-vars\r\n  methods: {\r\n    async register() {\r\n      // Données à envoyer à l'API\r\n      const utilisateur = {\r\n        Nom: this.name,\r\n        Email: this.email,\r\n        MotDePasse: this.password,\r\n      };\r\n\r\n      try {\r\n        // Envoi de la requête POST à l'API .NET\r\n        const response = await fetch('http://localhost:5000/inscription', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(utilisateur),\r\n        });\r\n\r\n        // Vérification du statut de la réponse\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          alert(\"Inscription réussie. Un email de validation a été envoyé.\"); // Afficher la réponse du serveur\r\n        } else {\r\n          const errorData = await response.json();\r\n          alert('Erreur : ' + errorData); // Afficher un message d'erreur\r\n        }\r\n      } catch (error) {\r\n        console.log(error.Message); // Gestion des erreurs\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n/* Global reset for consistent styling */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: 'Arial', sans-serif;\r\n  background-color: #121212; /* Dark background */\r\n  color: #e4e4e4; /* Light text for contrast */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\n.signup {\r\n  background-color: #1e1e1e; /* Dark background for the form */\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.6);\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  color: #00ff88; /* Crypto green accent */\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.input-group label {\r\n  display: block;\r\n  font-size: 14px;\r\n  color: #bbb;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.input-group input {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #333; /* Dark input background */\r\n  color: #e4e4e4;\r\n  border: 2px solid #444;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease-in-out;\r\n}\r\n\r\n.input-group input:focus {\r\n  border-color: #00ff88; /* Green border on focus */\r\n  outline: none;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #00ff88; /* Crypto green */\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #00cc6a; /* Darker green on hover */\r\n}\r\n\r\nbutton:focus {\r\n  outline: none;\r\n}\r\n\r\n@media (max-width: 400px) {\r\n  .signup {\r\n    padding: 20px;\r\n    width: 90%;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .input-group input, button {\r\n    padding: 10px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAsBA,eAAe;EACb;EACAA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACD;EACAC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf;MACA,MAAMC,WAAU,GAAI;QAClBC,GAAG,EAAE,IAAI,CAACN,IAAI;QACdO,KAAK,EAAE,IAAI,CAACN,KAAK;QACjBO,UAAU,EAAE,IAAI,CAACN;MACnB,CAAC;MAED,IAAI;QACF;QACA,MAAMO,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,WAAW;QAClC,CAAC,CAAC;;QAEF;QACA,IAAII,QAAQ,CAACO,EAAE,EAAE;UACf,MAAMjB,IAAG,GAAI,MAAMU,QAAQ,CAACQ,IAAI,CAAC,CAAC;UAClCC,KAAK,CAAC,2DAA2D,CAAC,EAAE;QACtE,OAAO;UACL,MAAMC,SAAQ,GAAI,MAAMV,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACvCC,KAAK,CAAC,WAAU,GAAIC,SAAS,CAAC,EAAE;QAClC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC,EAAE;MAC9B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}