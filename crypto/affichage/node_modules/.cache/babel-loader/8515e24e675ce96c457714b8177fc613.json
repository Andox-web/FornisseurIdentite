{"remainingRequest":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js!F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\CoursCrypto.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\src\\pages\\frontoffice\\CoursCrypto.vue","mtime":1738956092805},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\.babelrc","mtime":1737956864101},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\babel-loader\\lib\\index.js","mtime":1737957106813},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1737957116215},{"path":"F:\\Manoa\\vaovao\\ITU\\S5\\Mr Rojo\\examen\\crypto-1\\FornisseurIdentite\\crypto\\affichage\\node_modules\\vue-loader\\lib\\index.js","mtime":1737957107578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ChartCard","LTable","Card","components","data","selectedCrypto","cryptos","lineChart","labels","series","test","options","low","high","showArea","height","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","right","tableData","columns","interval","computed","filteredChartData","watch","_selectedCrypto","_asyncToGenerator","regeneratorRuntime","mark","_callee","newVal","wrap","_callee$","_context","prev","next","fetchCours","stop","_x","apply","arguments","methods","fetchCryptos","_fetchCryptos","_callee2","response","_callee2$","_context2","fetch","sent","json","map","c","t0","console","error","_fetchCours","_callee3","selected","_callee3$","_context3","abrupt","log","concat","d","valeur","fetchPrix","_fetchPrix","_callee4","_callee4$","_context4","item","nom","cryptomonnaie","prix","startAutoRefresh","_this","setInterval","_callee5","_callee5$","_context5","mounted","_this2","then","_callee6","_callee6$","_context6","beforeDestroy","clearInterval"],"sources":["src/pages/frontoffice/CoursCrypto.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"crypto-selector\">\n            <label for=\"cryptoSelect\">Sélectionner une crypto :</label>\n            <select v-model=\"selectedCrypto\" id=\"cryptoSelect\">\n              <option v-for=\"crypto in cryptos\" :key=\"crypto.id\" :value=\"crypto.id\">\n                {{ crypto.nom }}\n              </option>\n            </select>\n          </div>\n\n          <chart-card \n            :chart-data=\"filteredChartData\"\n            :chart-options=\"lineChart.options\"\n            :responsive-options=\"lineChart.responsiveOptions\"\n          >\n            <template slot=\"header\">\n              <h4 class=\"card-title\" v-if=\"selectedCrypto\">{{ selectedCrypto }} Chart</h4>\n              <p class=\"card-category\">24 Hours performance</p>\n            </template>\n            <template slot=\"footer\">\n              <!-- <div class=\"legend\">\n                <i class=\"fa fa-circle text-info\"></i> Bitcoin\n                <i class=\"fa fa-circle text-danger\"></i> Ethereum\n                <i class=\"fa fa-circle text-warning\"></i> BNB\n              </div> -->\n              <hr>\n              <div class=\"stats\">\n                <i class=\"fa fa-history\"></i> Updated 10 seconds ago\n              </div>\n            </template>\n          </chart-card>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <card>\n            <template slot=\"header\">\n              <h5 class=\"title\">Prix crypto actuel</h5>\n              <p class=\"category\">Mise à jour toutes les 10s</p>\n            </template>\n            <l-table :data=\"tableData.data\" :columns=\"tableData.columns\">\n              <template slot-scope=\"{ row }\">\n                <td>{{ row.nom }}</td>\n                <td>{{ row.prix }} $</td>\n              </template>\n            </l-table>\n            <div class=\"footer\">\n              <hr>\n              <div class=\"stats\">\n                <i class=\"fa fa-history\"></i> Updated 10 seconds ago\n              </div>\n            </div>\n          </card>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChartCard from 'src/components/Cards/ChartCard.vue';\nimport LTable from 'src/components/Table.vue';\nimport Card from '../../components/Cards/Card.vue';\n\nexport default {\n  components: {\n    LTable,\n    ChartCard,\n    Card\n  },\n  data() {\n    return {\n      selectedCrypto: 1,\n      cryptos: [],\n      lineChart: {\n        data: {\n          labels: [],\n          series: {\n            test: [10000, 12000, 13000, 14000, 15000, 16000, 17000, 18000]\n            // 2: [20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000],\n            // 3: [23000, 24000, 25000, 26000, 27000, 28000, 29000, 210000]\n          }\n        },\n        options: {\n          low: 0,\n          high: 80000,\n          showArea: false,\n          height: '245px',\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: true,\n          showLine: true,\n          showPoint: true,\n          fullWidth: true,\n          chartPadding: {\n            right: 50\n          }\n        },\n      },\n      tableData: {\n        data: [],\n        columns: ['Nom', 'Prix']\n      },\n      interval: null\n    };\n  },\n  computed: {\n    filteredChartData() {\n      return {\n        labels: this.lineChart.data.labels,\n        series: [this.lineChart.data.series.test || []]\n      };\n    }\n  },\n  watch: {\n    async selectedCrypto(newVal) {\n      if (newVal) {\n        await this.fetchCours();\n      }\n    }\n  },\n\n  methods: {\n    async fetchCryptos() {\n      try {\n        const response = await fetch('http://localhost:8081/cryptos');\n        const data = await response.json();\n        this.cryptos = data.map(c => c);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des cryptos\", error);\n      }\n    },\n    async fetchCours() {\n      if (!this.selectedCrypto) return;\n      try {\n        const selected = this.selectedCrypto;\n        console.log(selected);\n        if (!selected) return;\n        console.log(\"fetching cours .\");\n\n        const response = await fetch(`http://localhost:8081/cryptos/cours?id=${selected}`);\n        \n        const data = await response.json();\n        console.log(data);\n        // this.lineChart.data.series = data.map(d => d.valeur);\n        // this.lineChart.data.series = [data.map(d => d.valeur)];\n        this.lineChart.data.series.test = data.map(d => d.valeur);\n\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération du cours\", error);\n      }\n    },\n    async fetchPrix() {\n      try {\n        const response = await fetch('http://localhost:8081/cryptos/prix');\n        const data = await response.json();\n        this.tableData.data = data.map(item => ({\n          nom: item.cryptomonnaie.nom,\n          prix: item.valeur\n        }));\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des prix\", error);\n      }\n    },\n    startAutoRefresh() {\n      this.interval = setInterval( async() => {\n       await this.fetchCours();\n       await this.fetchPrix();\n      }, 10000);\n    }\n  },\n  mounted() {\n    this.fetchCryptos().then(async () => {\n      await this.fetchCours();\n      await this.fetchPrix();\n      await this.startAutoRefresh();\n    });\n  },\n  beforeDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n};\n</script>\n\n\n<style>\n.crypto-selector {\n  margin-bottom: 15px;\n}\n\n.crypto-selector label {\n  margin-right: 10px;\n  font-weight: bold;\n}\n\n.crypto-selector select {\n  padding: 5px;\n  font-size: 14px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}