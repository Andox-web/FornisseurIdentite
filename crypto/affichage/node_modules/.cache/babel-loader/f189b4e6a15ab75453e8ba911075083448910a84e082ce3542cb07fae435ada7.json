{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { Chart, registerables } from \"chart.js\";\n\n// Enregistrement des composants nécessaires\nChart.register(...registerables);\nexport default {\n  data() {\n    return {\n      cryptos: [{\n        name: \"Bitcoin\",\n        prices: [50000, 52000, 54000, 53000, 54000]\n      }, {\n        name: \"Ethereum\",\n        prices: [3000, 3100, 3200, 3150, 3300]\n      }, {\n        name: \"Ripple\",\n        prices: [0.8, 0.85, 0.9, 0.88, 0.92]\n      }],\n      selectedCrypto: \"Bitcoin\",\n      // Par défaut\n      chart: null\n    };\n  },\n  mounted() {\n    this.renderChart();\n  },\n  methods: {\n    renderChart() {\n      const ctx = document.getElementById(\"cryptoChart\").getContext(\"2d\");\n      const selectedCryptoData = this.cryptos.find(crypto => crypto.name === this.selectedCrypto);\n      this.chart = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\n          datasets: [{\n            label: `Prix ${this.selectedCrypto}`,\n            data: selectedCryptoData.prices,\n            borderColor: \"#ffcc00\",\n            borderWidth: 2,\n            backgroundColor: \"rgba(255, 204, 0, 0.1)\",\n            tension: 0.4,\n            pointRadius: 0\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              mode: \"index\",\n              intersect: false,\n              backgroundColor: \"#2e2e3d\",\n              titleColor: \"#fff\",\n              bodyColor: \"#ccc\"\n            }\n          },\n          scales: {\n            x: {\n              grid: {\n                color: \"#3a3a4d\"\n              },\n              ticks: {\n                color: \"#ccc\"\n              }\n            },\n            y: {\n              grid: {\n                color: \"#3a3a4d\"\n              },\n              ticks: {\n                color: \"#ccc\"\n              }\n            }\n          },\n          interaction: {\n            mode: \"nearest\",\n            intersect: false\n          }\n        }\n      });\n    },\n    updateChart() {\n      const selectedCryptoData = this.cryptos.find(crypto => crypto.name === this.selectedCrypto);\n\n      // Mise à jour des données du graphique\n      this.chart.data.datasets[0].data = selectedCryptoData.prices;\n      this.chart.data.datasets[0].label = `Prix ${this.selectedCrypto}`;\n      this.chart.update();\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","register","data","cryptos","name","prices","selectedCrypto","chart","mounted","renderChart","methods","ctx","document","getElementById","getContext","selectedCryptoData","find","crypto","type","labels","datasets","label","borderColor","borderWidth","backgroundColor","tension","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","titleColor","bodyColor","scales","x","grid","color","ticks","y","interaction","updateChart","update"],"sources":["C:\\Users\\Zotah\\S5\\ROJO\\exam\\FornisseurIdentite\\crypto\\affichage\\src\\components\\CoursCrypto.vue"],"sourcesContent":["<template>\r\n  <div class=\"cours-crypto\">\r\n    <h2>Cours des Cryptomonnaies</h2>\r\n    <div class=\"dropdown-container\">\r\n      <label for=\"crypto-select\">Choisir une cryptomonnaie :</label>\r\n      <select id=\"crypto-select\" v-model=\"selectedCrypto\" @change=\"updateChart\">\r\n        <option v-for=\"crypto in cryptos\" :key=\"crypto.name\" :value=\"crypto.name\">\r\n          {{ crypto.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <canvas id=\"cryptoChart\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart, registerables } from \"chart.js\";\r\n\r\n// Enregistrement des composants nécessaires\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cryptos: [\r\n        {\r\n          name: \"Bitcoin\",\r\n          prices: [50000, 52000, 54000, 53000, 54000],\r\n        },\r\n        {\r\n          name: \"Ethereum\",\r\n          prices: [3000, 3100, 3200, 3150, 3300],\r\n        },\r\n        {\r\n          name: \"Ripple\",\r\n          prices: [0.8, 0.85, 0.9, 0.88, 0.92],\r\n        },\r\n      ],\r\n      selectedCrypto: \"Bitcoin\", // Par défaut\r\n      chart: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n  },\r\n  methods: {\r\n    renderChart() {\r\n      const ctx = document.getElementById(\"cryptoChart\").getContext(\"2d\");\r\n      const selectedCryptoData = this.cryptos.find(\r\n        (crypto) => crypto.name === this.selectedCrypto\r\n      );\r\n\r\n      this.chart = new Chart(ctx, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\r\n          datasets: [\r\n            {\r\n              label: `Prix ${this.selectedCrypto}`,\r\n              data: selectedCryptoData.prices,\r\n              borderColor: \"#ffcc00\",\r\n              borderWidth: 2,\r\n              backgroundColor: \"rgba(255, 204, 0, 0.1)\",\r\n              tension: 0.4,\r\n              pointRadius: 0,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            tooltip: {\r\n              mode: \"index\",\r\n              intersect: false,\r\n              backgroundColor: \"#2e2e3d\",\r\n              titleColor: \"#fff\",\r\n              bodyColor: \"#ccc\",\r\n            },\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                color: \"#3a3a4d\",\r\n              },\r\n              ticks: {\r\n                color: \"#ccc\",\r\n              },\r\n            },\r\n            y: {\r\n              grid: {\r\n                color: \"#3a3a4d\",\r\n              },\r\n              ticks: {\r\n                color: \"#ccc\",\r\n              },\r\n            },\r\n          },\r\n          interaction: {\r\n            mode: \"nearest\",\r\n            intersect: false,\r\n          },\r\n        },\r\n      });\r\n    },\r\n    updateChart() {\r\n      const selectedCryptoData = this.cryptos.find(\r\n        (crypto) => crypto.name === this.selectedCrypto\r\n      );\r\n\r\n      // Mise à jour des données du graphique\r\n      this.chart.data.datasets[0].data = selectedCryptoData.prices;\r\n      this.chart.data.datasets[0].label = `Prix ${this.selectedCrypto}`;\r\n      this.chart.update();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.cours-crypto {\r\n  padding: 1rem;\r\n  background-color: #1e1e2f;\r\n  color: white;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  height: 500px; /* Ajusté pour inclure le menu déroulant */\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n}\r\n\r\ncanvas {\r\n  max-width: 100%;\r\n  height: 350px; /* Espace réservé pour le graphique */\r\n  margin: auto;\r\n  display: block;\r\n}\r\n\r\n.dropdown-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nlabel {\r\n  margin-right: 10px;\r\n  font-size: 1rem;\r\n  color: #ccc;\r\n}\r\n\r\nselect {\r\n  padding: 5px 10px;\r\n  font-size: 1rem;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #2e2e3d;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}